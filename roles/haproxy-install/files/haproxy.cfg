global
  log                         127.0.0.1 local2
  chroot                      /var/lib/haproxy
  pidfile                     /var/run/haproxy.pid
  stats                       timeout 30s
  maxconn                     4000
  user                        haproxy
  group                       haproxy
  daemon
  ssl-default-bind-ciphers    ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
  ssl-default-bind-options    ssl-min-ver TLSv1.2 no-tls-tickets
  tune.ssl.default-dh-param   2048

defaults
  mode                        http
  log                         global
  option                      httplog
  option                      dontlognull
  option                      http-server-close
  option                      redispatch
  retries                     3
  timeout http-request        10s
  timeout queue               1m
  timeout connect             10s
  timeout client              1m
  timeout server              1m
  timeout http-keep-alive     10s
  timeout check               10s
  maxconn                     3000

userlist basic-auth-list
  group is-admin
  user admin password $6$JWKH4T5kp36cR0Y9$x4eI3zcKVPQEhIKx64uIlIDrBVMXBus/ZlAipvc1x/s1ivhFA5FI6j2lDiiYz4ad11PaVAtpI2vU4i1oUy/3G0 groups is-admin

# HTTP/HTTPS FrontEnd
frontend server
  mode http
  option httplog
  option httpclose
  option forwardfor
  bind :80
  # bind :443 ssl crt-list /etc/haproxy/tls/domains

  # HAProxy statistics
  stats enable
  stats refresh 60s
  stats uri /haproxy?stats
  acl admin-nets src 127.0.0.1 10.22.28.0/24 10.10.222.0/24 10.0.0.0/8
  acl admin-auth http_auth_group(basic-auth-list) is-admin
  stats http-request deny if !admin-nets
  stats http-request auth realm HAProxySTATs unless admin-auth admin-nets
  option http-use-htx
  http-request use-service prometheus-exporter if { path /metrics }

  http-request add-header X-Forwarded-Host %[req.hdr(host)]
  http-request add-header X-Forwarded-Server %[req.hdr(host)]
  http-request add-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  redirect scheme https code 301 if !{ ssl_fc }


  # acl rabbitmq_acl  hdr_dom(host) -i rabbitmq.CHANGEME_DOMAIN.fozzy.lan
  # acl CHANGEME1_ACL hdr_dom(host) -i CHANGEME1_DOMAIN.fozzy.lan

  # use_backend RabbitMQ.HTTP if rabbitmq_acl
  # use_backend CHANGEME1.service if CHANGEME1_ACL

default_backend Default.Backend
  backend Default.Backend
  mode http
  balance roundrobin
  server ccc 0.0.0.0:8888 check

# backend CHANGEME1.service
#   description CHANGEME1.service (CHANGEME_PORT/tcp)
#   mode http
#   balance roundrobin
#   option http-keep-alive
#   option forwardfor
#   cookie SRVNAME insert
#   server node-n01 CHANGEME_IP1:CHANGEME_PORT check
#   server node-n02 CHANGEME_IP2:CHANGEME_PORT check
#   server node-n03 CHANGEME_IP3:CHANGEME_PORT check

# # RabbitMQ WebAdmin BackEnd WebConsole
# backend RabbitMQ.HTTP
#   description The RabbitMQ WebConsole LB (15672/tcp)
#   mode http
#   balance roundrobin
#   option http-keep-alive
#   option forwardfor
#   cookie RBNODE insert
#   server rabbitmq-n01 CHANGEME_IP4:15672 cookie RBNODE01 check
#   server rabbitmq-n02 CHANGEME_IP5:15672 cookie RBNODE02 check
#   server rabbitmq-n03 CHANGEME_IP6:15672 cookie RBNODE03 check

# # RabbitMQ
# listen RabbitMQ.Servers
#   description The RabbitMQ LB (5672/tcp)
#   mode tcp
#   option tcplog
#   bind CHANGEME_IP_VIP:5672
#   balance roundrobin
#   timeout client  120s
#   timeout server  120s
#   server rabbitmq-n01 CHANGEME_IP8:5672 check
#   server rabbitmq-n02 CHANGEME_IP9:5672 check
#   server rabbitmq-n03 CHANGEME_IP0:5672 check



